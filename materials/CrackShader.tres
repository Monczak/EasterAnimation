[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://bjfm0ckirqumq"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jpmox"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_pnchp"]
output_port_for_preview = 0
function = 4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_28p60"]
parameter_name = "Reveal"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h7qxv"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1m6f1"]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Reveal = 0;



void fragment() {
// Input:5
	vec4 n_out5p0 = COLOR;
	float n_out5p4 = n_out5p0.a;


// Input:2
	vec2 n_out2p0 = UV;
	float n_out2p1 = n_out2p0.r;


// FloatParameter:4
	float n_out4p0 = Reveal;


// Compare:3
	bool n_out3p0 = n_out2p1 < n_out4p0;


// FloatOp:6
	float n_out6p0 = n_out5p4 * (n_out3p0 ? 1.0 : 0.0);


// Output:0
	COLOR.a = n_out6p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1080, 260)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_jpmox")
nodes/fragment/2/position = Vector2(100, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeCompare_pnchp")
nodes/fragment/3/position = Vector2(560, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_28p60")
nodes/fragment/4/position = Vector2(180, 400)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_h7qxv")
nodes/fragment/5/position = Vector2(180, 60)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_1m6f1")
nodes/fragment/6/position = Vector2(860, 130)
nodes/fragment/connections = PackedInt32Array(2, 1, 3, 0, 4, 0, 3, 1, 3, 0, 6, 1, 5, 4, 6, 0, 6, 0, 0, 1)
